(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'NoneType' object has no attribute 'readable'"
p3
sS'layer'
p4
S'/Users/michaelherman/Documents/RealPython/web2py-rest/applications/socrata/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    response.flash = T("Welcome to web2py!")\n    return dict(message=T(\'Hello World\'))\n\n@request.restful()\ndef api():\n    response.view = \'generic.json\'+request.extension\n    def GET(*args,**vars):\n        patterns = [\n            "/socrata/{socrata.name.startswith}",\n            "/socrata/{socrata.name}/:field",\n            "/socrata/{socrata.id}/:field",\n            "/socrata/{socrata.id}"\n            ] \n        parser = db.parse_as_rest(patterns,args,vars)\n        if parser.status == 200:\n            return dict(content=parser.response)\n        else:\n            raise HTTP(parser.status,parser.error)\n    def POST(table_name,**vars):\n        return db[table_name].validate_and_insert(**vars)\n    def PUT(table_name,record_id,**vars):\n        return db(db[table_name]._id==record_id).update(**vars)\n    def DELETE(table_name,record_id):\n        return db(db[table_name]._id==record_id).delete()\n    return dict(GET=GET, POST=POST, PUT=PUT, DELETE=DELETE)\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\nresponse._vars=response._caller(api)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/Users/michaelherman/Documents/RealPython/web2py-rest/gluon/restricted.py", line 217, in restricted\n    exec ccode in environment\n  File "/Users/michaelherman/Documents/RealPython/web2py-rest/applications/socrata/controllers/default.py", line 100, in <module>\n  File "/Users/michaelherman/Documents/RealPython/web2py-rest/gluon/globals.py", line 372, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/michaelherman/Documents/RealPython/web2py-rest/gluon/globals.py", line 336, in f\n    return rest_action(*_self.args, **getattr(_self,\'vars\',{}))\n  File "/Users/michaelherman/Documents/RealPython/web2py-rest/applications/socrata/controllers/default.py", line 34, in GET\n    parser = db.parse_as_rest(patterns,args,vars)\n  File "/Users/michaelherman/Documents/RealPython/web2py-rest/gluon/dal.py", line 8059, in parse_as_rest\n    if not db[table][field].readable:\nAttributeError: \'NoneType\' object has no attribute \'readable\'\n'
p11
s.